# -*- coding: utf-8 -*-
"""remove_correlated.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12HC4C1VYw22wzjzW1OVq0BLPJefyePM3
"""

import statsmodels.api as sm
mtcars = sm.datasets.get_rdataset('mtcars')
df = mtcars.data
def remove_correlated(df,threshold):
  continuos_columns=[]
  for col in df.columns:
    #below line allows a column to have less than 25% noise in numeric column i.e. (25%)categorical values in numeric column above if above 25% it will not consider that column
    if(pd.to_numeric(df[col],errors='coerce').isna().sum()< 0.25*len(df[col])):
      df[col]=pd.to_numeric(df[col],errors='coerce')
      continuos_columns.append(col)
  corr_matrix = df.loc[:,continuos_columns].corr(method='pearson').abs()
  upper = corr_matrix.where(np.triu(np.ones(corr_matrix.shape), k=1).astype(np.bool))  
  to_drop = [column for column in upper.columns if any(upper[column] > threshold)]
  print("These columns have been dropped",to_drop)
  df.drop(to_drop, axis=1, inplace=True)   
  return df

df=remove_correlated(df,0.85)
df